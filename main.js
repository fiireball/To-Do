!function(e){var t={};function o(r){if(t[r])return t[r].exports;var n=t[r]={i:r,l:!1,exports:{}};return e[r].call(n.exports,n,n.exports,o),n.l=!0,n.exports}o.m=e,o.c=t,o.d=function(e,t,r){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(o.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)o.d(r,n,function(t){return e[t]}.bind(null,n));return r},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="",o(o.s=0)}([function(e,t,o){"use strict";o.r(t);var r={events:{},on(e,t){this.events[e]=this.events[e]||[],this.events[e].push(t)},off(e,t){if(this.events[e])for(let o=0;o<this.events[e].length;o++)if(this.events[e][o]===t){this.events[e].splice(o,1);break}},emit(e,t){this.events[e]&&this.events[e].forEach(e=>{e(t)})}};var n=(e,t,o,r,n,c,s)=>{let d=e,i=t,a=o,l=r,p=n,u=c,h=s;return{getType:()=>"Task",getTitle:()=>d,getDescription:()=>i,getDueDate:()=>a,getPriority:()=>l,getNotes:()=>p,getChecklist:()=>u,isCompleted:()=>h,toggleCompleted:()=>{h=!h}}};const c=(e,t,o)=>{let n=e,c=t,s=o,d=[],i=!1;const a=()=>d,l=e=>{d=e},p=()=>{i=!0},u=()=>{i=!1};return r.on("aProjectClicked",e=>{i&&u(),e===n&&p(),i&&r.emit("activeProjectChanged",d)}),{getType:()=>"Project",getTitle:()=>n,getDescription:()=>c,getColor:()=>s,getTasks:a,addTask:e=>{const t=a();t.push(e),l(t)},setTasks:l,isActive:()=>i,setActiveTrue:p,setActiveFalse:u}};r.on("newProjectToCreate",e=>{console.log("input: ",e);const t=c(e.title,e.description,e.color);console.log("_newProject.getTitle()",t.getTitle()),console.log("_newProject.getDescription()",t.getDescription()),r.emit("newProjectCreated",t)});var s=c;const d=(()=>{let e=[];return{getAllProjects:()=>e,addNewProject:t=>{e.push(t),r.emit("projectsListChanged",e)},setProjects:t=>{e=t},getActiveProject:()=>{e.forEach(e=>{if(e.isActive())return console.log(e),e})}}})();r.on("newProjectCreated",d.addNewProject);var i=d;const a=(()=>{const e=document.querySelector(".projects-container"),t=document.querySelector(".tasks-container"),o=document.querySelector(".overlay"),n=t=>{t.forEach(t=>{const o=document.createElement("div"),r=document.createElement("div"),n=document.createElement("div"),c=document.createElement("h4"),s=document.createElement("p"),d=t.getTitle(),i=t.getDescription(),a=t.getColor();o.classList.add("project-card"),r.classList.add("project-card-upper"),n.classList.add("project-card-lower"),t.isActive()&&o.classList.add("active-project"),o.setAttribute("data-name",d),o.style["border-color"]=a,c.textContent=d,s.textContent=i,e.appendChild(o),r.appendChild(c),n.appendChild(s),o.appendChild(r),o.appendChild(n)}),r.emit("projectsRendered",e)},c=e=>{let o;o=Array.isArray(e)?e:e.getTasks(),o.forEach(e=>{const o=document.createElement("div"),r=document.createElement("div"),n=document.createElement("h4"),c=document.createElement("div"),s=document.createElement("p"),d=(e=>{const t=document.createElement("div");return t.classList.add("checklist-container"),e.forEach(e=>{const o=document.createElement("div");o.classList.add("checklist-item"),o.textContent=e,t.appendChild(o)}),t})(e.getChecklist()),i=document.createElement("button");o.classList.add("task-card"),r.classList.add("task-title-container"),c.classList.add("task-description-container"),n.textContent=e.getTitle(),s.textContent=e.getDescription(),e.isCompleted()?i.style["background-color"]="green":i.style["background-color"]="red",r.appendChild(n),r.appendChild(i),c.appendChild(s),o.appendChild(r),o.appendChild(c),o.appendChild(d),t.appendChild(o)})};return{renderProjects:n,renderTasks:c,refreshTasksRender:e=>{t.querySelectorAll(".task-card").forEach(e=>{e.remove()}),c(e)},refreshProjectsRenderer:t=>{(()=>{for(;e.firstChild;)e.firstChild.remove()})(),n(t)},showAddProjectWindow:()=>{const e=document.querySelector(".new-project-window");e.classList.add("active"),o.classList.add("active"),o.addEventListener("click",()=>{e.classList.remove("active"),o.classList.remove("active")})},showAddTaskWindow:()=>{const e=document.querySelector(".new-task-window");e.classList.add("active"),o.classList.add("active"),o.addEventListener("click",()=>{e.classList.remove("active"),o.classList.remove("active")})},getNewProjectUserInput:()=>{const e={title:document.getElementById("new-project-title").value,description:document.getElementById("new-project-description").value,color:void 0};r.emit("newProjectToCreate",e)},switchToActiveProject:(e,t)=>{for(let t=0;t<e.length;t++)e[t].classList.remove("active-project");t.classList.add("active-project")}}})();(()=>{document.getElementById("add-new-project-btn").addEventListener("click",a.showAddProjectWindow);document.getElementById("add-project-to-projects").addEventListener("click",a.getNewProjectUserInput);document.getElementById("add-new-task-btn").addEventListener("click",a.showAddTaskWindow),r.on("projectsRendered",e=>{const t=e.children;for(let e=0;e<t.length;e++)t[e].addEventListener("click",()=>{r.emit("aProjectClicked",t[e].dataset.name),a.switchToActiveProject(t,t[e])})})})();var l=a;var p=(()=>{const e=n("Eat Dinner","Have to eat dinner before drinking","19.06.2020","high","no notes",["Check1","Check2","check3"],!1),t=n("Drink Water","Have to drink water to stay hydrated","19.06.2020","high","no notes",["Check1","Check2","check3"],!1),o=s("Food","All things food related","red"),r=n("Pee","Empty you bladder","19.06.2020","high","no notes",["Check1","Check2","check3"],!1),c=n("Poop","Empty your bowels","19.06.2020","high","no notes",["Check1","Check2","check3"],!1),d=s("Bio stuff","all things bathroom related");o.addTask(e),o.addTask(t),d.addTask(r),d.addTask(c);const i=[o,d];return{getProjects:()=>i,projects:i}})();console.log("webpack init");const u=p.getProjects();i.setProjects(u);const h=i.getAllProjects();l.renderProjects(h),h.forEach(e=>{e.isActive()&&l.renderTasks(e)}),r.on("activeProjectChanged",l.refreshTasksRender),r.on("projectsListChanged",l.refreshProjectsRenderer)}]);